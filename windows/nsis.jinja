!define PRODUCT_VERSION "{{ MAJOR_VERSION_NUM }}.0"
!define PRODUCT_PUBLISHER "{{ ORG }}"
!define INSTDIR_REG_ROOT "SHELL_CONTEXT"

; PT:SERVICE
!define displayName "{{ MAJOR_VERSION }}"
!define serviceName "{{ MAJOR_VERSION }}"
; PT:SERVICE
!define MULTIUSER_EXECUTIONLEVEL Highest
!define MULTIUSER_MUI
!define MULTIUSER_INSTALLMODE_COMMANDLINE
!define  MULTIUSER_INSTALLMODE_FUNCTION onMultiUserModeChanged
!include MultiUser.nsh

!macro GetUserProgramFiles outvar
    !define /IfNDef KF_FLAG_CREATE 0x00008000
    !define /IfNDef FOLDERID_UserProgramFiles {5CD7AEE2-2219-4A67-B85D-6C9CE15660CB}
    System::Store S
    System::Call 'SHELL32::SHGetKnownFolderPath(g "${FOLDERID_UserProgramFiles}", i ${KF_FLAG_CREATE}, p 0, *p .r2)i.r1' ; This will only work on Win7+
    ${If} $1 == 0
        System::Call '*$2(&w${NSIS_MAX_STRLEN} .s)'
        System::Call 'OLE32::CoTaskMemFree(p r2)'
    ${Else}
        Push "$LocalAppData\Programs"
    ${EndIf}
    System::Store L
    Pop ${outvar}
!macroend

SetCompressor /SOLID lzma

Name "{{ DISPLAY_NAME }}"
OutFile "dist\{{ MAJOR_VERSION }}-{{ MINOR_VERSION }}-win64-installer.exe"
ShowInstDetails show
ShowUninstDetails show
InstallDir "$PROGRAMFILES64\{{ ORG }}\{{ MAJOR_VERSION }}"

;--------------------------------
;Interface Settings
  !define MUI_ABORTWARNING
  !define MUI_LICENSEPAGE_CHECKBOX
  ; PT:GUI
  !define MUI_FINISHPAGE_RUN "$INSTDIR\{{ MAJOR_VERSION }}_qt\{{ MAJOR_VERSION }}_qt.exe"
  ; PT:GUI
  !define MUI_STARTMENUPAGE_DEFAULTFOLDER "{{ MAJOR_VERSION }}"

!include MUI2.nsh
!include WinVer.nsh
!include x64.nsh

;--------------------------------
;Modern UI Configuration
;Installer pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "LICENSE"

!insertmacro MULTIUSER_PAGE_INSTALLMODE
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_COMPONENTS

!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

;Uninstaller pages
!insertmacro MUI_UNPAGE_WELCOME
!insertmacro MUI_UNPAGE_CONFIRM
;!insertmacro MUI_UNPAGE_LICENSE textfile
;!insertmacro MUI_UNPAGE_COMPONENTS
!insertmacro MUI_UNPAGE_DIRECTORY
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

;--------------------------------
;Languages
  !insertmacro MUI_LANGUAGE "English"

Function onMultiUserModeChanged
    ${If} $MultiUser.InstallMode == "CurrentUser"
        !insertmacro GetUserProgramFiles $InstDir
        StrCpy $InstDir "$InstDir\{{ ORG }}\{{ MAJOR_VERSION }}"
    ${EndIf}
FunctionEnd

Function .onInit
    !insertmacro MULTIUSER_INIT
    ${IfNot} ${AtLeastWin10}
        MessageBox MB_OK "Windows 10 or later required, 64 bit only"
        Quit
    ${EndIf}
    ${IfNot} ${RunningX64}
        MessageBox MB_OK \
            "64 bit Windows 10 or later required, 32 bit is not supported"
        Quit
    ${EndIf}
FunctionEnd

Function un.onInit
    !insertmacro MULTIUSER_UNINIT
FunctionEnd

Section "Base Install" SEC01
    SectionIn RO
    ; Delete the old program
    RMDir /r $INSTDIR
    CreateDirectory $INSTDIR
    SetOutPath $INSTDIR
    writeUninstaller "$INSTDIR\uninstall.exe"
    File "files\icons\{{ MAJOR_VERSION }}.ico"

    ; Add to the "Add or remove programs" dialog
    WriteRegStr ${INSTDIR_REG_ROOT} \
        "Software\Microsoft\Windows\CurrentVersion\Uninstall\{{ MAJOR_VERSION }}" \
        "DisplayName" \
        "{{ MAJOR_VERSION }}"
    WriteRegStr ${INSTDIR_REG_ROOT} \
        "Software\Microsoft\Windows\CurrentVersion\Uninstall\{{ MAJOR_VERSION }}" \
        "DisplayIcon" \
        "$\"$INSTDIR\{{ MAJOR_VERSION }}.ico$\""
    WriteRegStr ${INSTDIR_REG_ROOT} \
        "Software\Microsoft\Windows\CurrentVersion\Uninstall\{{ MAJOR_VERSION }}" \
        "UninstallString" \
        "$\"$INSTDIR\uninstall.exe$\""
SectionEnd

; PT:CLI
Section "Command Line Interface" SEC02
    SetOutPath $INSTDIR\{{ MAJOR_VERSION }}_cli
    File /r "dist\{{ MAJOR_VERSION }}_cli\"
    EnVar::SetHKLM
    EnVar::AddValue "path" "$INSTDIR\{{ MAJOR_VERSION }}_cli"

    ; PT:SERVICE
    ExecWait 'sc create ${serviceName} error= "severe" displayname= "${displayName}" type= "own" start= "auto" binpath= "$INSTDIR\{{ MAJOR_VERSION }}_cli\{{ MAJOR_VERSION }}_cli.exe"'

    ; PT:SERVICE
SectionEnd
; PT:CLI

; PT:QT
Section "Qt User Interface" SEC03
    SetOutPath $INSTDIR\{{ MAJOR_VERSION }}_qt
    File /r "dist\{{ MAJOR_VERSION }}_qt\"
SectionEnd
; PT:QT

; PT:SDL2
Section "SDL2 Game" SEC04
    SetOutPath $INSTDIR\{{ MAJOR_VERSION }}_sdl2
    File /r "dist\{{ MAJOR_VERSION }}_sdl2\"
SectionEnd
; PT:SDL2

; PT:GUI
Section "Start Menu Shortcut" SEC05
    ; PT:QT
    createShortCut \
      "$SMPROGRAMS\{{ MAJOR_VERSION }}_qt.lnk" \
      "$INSTDIR\{{ MAJOR_VERSION }}_qt\{{ MAJOR_VERSION }}_qt.exe" \
      "" \
      "$INSTDIR\{{ MAJOR_VERSION }}.ico"
    ; PT:QT
    ; PT:SDL2
    createShortCut \
      "$SMPROGRAMS\{{ MAJOR_VERSION }}_sdl2.lnk" \
      "$INSTDIR\{{ MAJOR_VERSION }}_sdl2\{{ MAJOR_VERSION }}_sdl2.exe" \
      "" \
      "$INSTDIR\{{ MAJOR_VERSION }}.ico"
    ; PT:SDL2
SectionEnd
; PT:GUI

Section "uninstall"
    RMDir /r $INSTDIR
    ; Call without /r, only delete if empty
    RMDir "$PROGRAMFILES64\{{ ORG }}"

    ; PT:QT
    Delete "$SMPROGRAMS\{{ MAJOR_VERSION }}_qt.lnk"
    ; PT:QT
    ; PT:SDL2
    Delete "$SMPROGRAMS\{{ MAJOR_VERSION }}_sdl2.lnk"
    ; PT:SDL2
    ; PT:CLI
    EnVar::SetHKLM
    EnVar::DeleteValue "path" "$INSTDIR\{{ MAJOR_VERSION }}_cli"
    ; PT:CLI
    DeleteRegKey ${INSTDIR_REG_ROOT} \
        "Software\Microsoft\Windows\CurrentVersion\Uninstall\{{ MAJOR_VERSION }}"
SectionEnd

!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} \
        "Basic components required by all other components"
    ; PT:CLI
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} \
        "A command line interface to use from cmd.exe"
    ; PT:CLI
    ; PT:QT
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC03} \
        "A Qt graphical user interface"
    ; PT:QT
    ; PT:SDL2
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC04} \
        "A game written with SDL2"
    ; PT:SDL2
    ; PT:GUI
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC05} \
        "Add shortcut(s) to the start menu for each component"
    ; PT:GUI
!insertmacro MUI_FUNCTION_DESCRIPTION_END
